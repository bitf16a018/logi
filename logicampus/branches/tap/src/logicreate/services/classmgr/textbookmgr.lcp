<?
/*
 *
 * Default service
 *
 */

include_once(LIB_PATH.'datagrid.php');
include_once(LIB_PATH.'SiteForms.php');
include_once(LIB_PATH.'semesterObj.php');

include_once(LIB_PATH.'Textbook.php');
include_once(LIB_PATH.'TextbookClasses.php');

class textbookmgr extends FacultyService {

	var $presentor = 'htmlPresentation';


	// links
	var $navlinks = array (
		'Classroom Manager' => 'display',
		'Lessons' => 'lessonManager/',
		'Webliography' => 'lessonWebliography/',
		'FAQ' => 'faq/',
		'Assignments' => 'assignmentManage/',
		'Content' => 'lessonContent/',
		'Presentations' => 'studentPresentation',
		'Objectives' => 'lessonObjectives/'
	);
	var $applinks = array(
		'List FAQs' => 'faq/',
		'Add FAQ' => 'faq/event=add'
	);
	var $inactivelinks = array( 'FAQ' );
	var $sectionTitle = 'FAQ';


	function Run(&$db,&$u,&$lc,&$t) {

		$lc->templateName = 'main_main';
		$this->sectionTitle = 'Textbook Manager';

		$t['semid'] = $u->sessionvars['semesterid'] =
			$u->sessionvars['semesterid']
			? $u->sessionvars['semesterid']
			: semesterObj::getCurrentID();

		$f = new Siteform();
		$arr = array( 'semester' => $t['semid'] );
		$f->getForm('semester', $arr);
		$f->requiredMessage = '';
		$t['semform'] = $f->toHTML();

		$dg = new searchGrid($this->module, $this->serviceName);
		$dg->table = 'textbook_classes as tc';
		$dg->column = 'tc.id_textbook_classes, tc.title, tc.status';
		$dg->joins = 'right join classes as c on c.id_classes=tc.id_classes
			left join textbook as t on t.id_classes=tc.id_classes
			inner join courses as o on o.id_courses=c.id_courses
			inner join profile as p on p.username=c.facultyId';
		$dg->where = 'id_classes="'.$u->activeClassTaught->id_classes.'"
			and id_semester="'.$t['semid'].'"';
		$dg->ignore = array( 'id_textbook_classes' );

		$dg->overrideColumn( '<?=$lastname.", ".$firstname;?>', 'firstname' );
		$dg->overrideColumn( '<a href="<?=modurl("main/event=edit/class=$id_classes");?>">'
			.'<?=$courseName;?></a>', 'courseName' );
		$dg->overrideColumn( '<? switch ( $status ) {
			case 1: print "New";      break;
			case 2: print "Pending";  break;
			case 3: print "Approved"; break;
		}
		?>', 'status' );

		$dg->postpendColumn( '<? if ( $id_textbook_classes ) { ?><a href="<?=modurl("main/event=edit/id="'
			.'.$id_textbook_classes);?>">edit</a> | <a href="<?=modurl("main/event=view/id="'
			.'.$id_textbook_classes);?>">view</a><? } else { ?><i>No book</i><? } ?>', ' ' );

		$dg->headers = array(
			'id_classes' => 'Class ID',
			'courseName' => 'Course (click to add book)',
			'firstname' => 'Instructor',
			'status' => 'Status',
			'title' => 'Item Name'
		);

		$dg->addInstructorSelectFilter('Instructor', 'p.username');
		$dg->addCourseFamilyNumberSelectFilter('Course', 'o.id_courses');
		$dg->addInputFilter('Class ID', 'l.id_classes', true);
		$dg->addInputFilter('Item Title', 'tc.title');
		$dg->addInputFilter('Item Author', 'tc.author');
		$dg->addInputFilter('Item Publisher', 'tc.publisher');
		$dg->addInputFilter('Item ISBN', 'tc.isbn');

		$t['table'] = $dg->toHTML();

		// stupid hack to get a feedback message
		if ($u->sessionvars['message']) {
			$t['message'] = $u->sessionvars['message'];
			unset($u->sessionvars['message']);
		}
	}


	function editRun(&$db,&$u,&$lc,&$t) {

		$lc->templateName = 'main_edit';
		$this->sectionTitle = 'Edit Item';
		
		$id_textbook_classes = (int)$lc->getvars['id'];
		$id_classes = (int)$lc->getvars['class'];

		$book = TextbookClasses::load( $id_textbook_classes );

		if ( !is_object($book) && $id_classes ) {
			$book = new TextbookClasses();
			$book->set( 'id_classes', $id_classes );
			$this->sectionTitle = 'Add Item';
		} else if ( !is_object($book) ) {
			$this->presentor = 'errorMessage';
			$t['message'] = 'Unable to load or create book.';
			return;
		}

		$f = new Siteform();
		$f->getForm('book', $book);
		$t['form'] = $f->toHTML();

	}

	function updateRun(&$db,&$u,&$lc,&$t) {


		$id_textbook_classes = (int)$lc->getvars['id'];
		$id_classes = (int)$lc->getvars['class'];

		$book = TextbookClasses::load( $id_textbook_classes );

		if ( !is_object($book) && $id_classes ) {
			$book = new TextbookClasses();
			$book->set( 'id_classes', $id_classes );
		} else if ( !is_object($book) ) {
			$this->presentor = 'errorMessage';
			$t['message'] = 'Unable to load or create book.';
			return;
		}

		$book->setArray( $lc->postvars );
		if ( $lc->postvars['required'] == 0 ) unset($book->required);
		if ( $lc->postvars['bundled'] == 0 ) unset($book->bundled);
		if ( $id_classes && !$id ) $book->set( 'idClasses', $id_classes );

		$book->save();
		$t['message'] = 'Book saved successfully.';
		$this->Run($db,$u,$lc,$t);

	}

}

?>
