<? 

/******
* helpdesk module for tccd
* 8/3/03
*
******/
 
include_once (LIB_PATH."LC_html.php"); 
include_once (LIB_PATH."datagrid.php"); 
include_once (LIB_PATH."SiteForms.php"); 
include_once (SERVICE_PATH."helpdesk/HelpdeskIncident.php");
include_once (SERVICE_PATH."helpdesk/HelpdeskIncidentLog.php");
 
 
class helpdesk extends RegAuth { 
 
	var $presentor = "htmlPresentation"; 
 
	var $sectionTitle = 'Help Desk';
	var $navlinks = array(
		'Helpdesk'=>'main',
		'FAQs'=>'faq'
	);
	var $applinks = array(
		'List Tickets' => '',
		'Submit new ticket' => 'helpdeskSubmit'
		
	);
	var $inactivelinks = array(
	);

	function helpdesk() { 
		global $lcObj;
		$lcObj->templateStyle = 'private';
	}
	 
	/** 
	 * Show different template for different users - staff or student
	 */ 

	function run(&$db,&$u,&$arg,&$t) 
	{
		$this->inactivelinks[] = 'List Tickets';
		
		$arg->templateStyle = 'private';

		// get a list of categories
		$db->query("select * from helpdesk_categories");
		while($db->next_record()) {
			$t['categories'][$db->Record[0]] = $db->Record['helpdesk_category_label'];
		}
				
		// STAFF
		if (in_array("hdadmin",$u->groups) || in_array('admin', $u->groups) ) { 
			$this->adminRun($db,$u,$arg,$t);
			return;
		}
		if (in_array("hdstaff",$u->groups) || in_array('admin', $u->groups) ) { 
			$this->adminRun($db,$u,$arg,$t);
			return;
		}
		// END STAFF
		
		
		// REGULAR VIEW (AVERAGE PERSON) (NON PUBLIC) but student/faculty
		$sql = "
		SELECT a.*, count(b.helpdesk_id) as activity
		
		FROM helpdesk_incident as a
		
		INNER JOIN helpdesk_incident_log as b
			ON b.helpdesk_id=a.helpdesk_id
		
		WHERE a.userid='".$u->username."' 
			AND a.status<>3 
		
		GROUP BY b.helpdesk_id
		
		ORDER BY a.status DESC";
		
		$db->query($sql);
		while($db->next_record()) 
		{	$t['open'][] =$db->Record;
		}
		
		$sql = "
		SELECT a.*, count(b.helpdesk_id) as activity
		
		FROM helpdesk_incident as a
		
		INNER JOIN helpdesk_incident_log as b
			ON b.helpdesk_id=a.helpdesk_id
		
		WHERE a.userid='".$u->username."' 
			AND a.status = 3 
		
		GROUP BY b.helpdesk_id
		
		ORDER BY a.status DESC";
		
		$db->query($sql);
		while($db->next_record()) 
		{	$t['closed'][] =$db->Record;
		}
		
		$arg->templateName = 'main_view';
		// END AVERAGE PERSON
		
	}
	

	function adminRun(&$db,&$u,&$arg,&$t) 
	{
		$this->inactivelinks[] = 'List Tickets';

		if (in_array("hdadmin",$u->groups) || in_array('admin', $u->groups) )
		{	
			$this->applinks['Modify status and category codes'] = 'main/event=admin2';
			$this->applinks['User Accounts'] = '%administration/users';
		}

		$arg->templateStyle = 'private';
		
		// get a list of statuses
		$db->query("select * from helpdesk_status");
		while($db->next_record()) {
			$t['status'][$db->Record[0]] = $db->Record['helpdesk_status_label'];
		}		

		$arg->templateName = 'main_hdadmin';

	/**
	 *
		Had to swap the searchgrid() with questinPoolgrid
		becuase the questionpoolgrid keeps the filter state
		on next/prev link (images)
	 *
	 */
		$x = new questionPoolGrid('helpdesk','main');

		//only show closed if it's specifically asked for
		// otherwise, filter it out all the time
		if ($arg->postvars['selectfilter']['status'] != 3)
		{
			$x->where = " status <> 3 ";
		}

		$x->rowsPerPage = 25;
		$x->sortColumns = array("category","assigned_to","timedate_update","timedate_close","summary", 'helpdesk_id', 'userid');
		$x->column = "helpdesk_id,summary,timedate_update,timedate_close,status,category,assigned_to,userid";
		$x->table = "helpdesk_incident";
		#$x->where = " userid='".$u->pkey."'";
		$j = "\$t = unserialize('".serialize($t['status'])."');";
		$x->overrideColumn('<? '.$j.' echo $t[$status];?>','status');
		$j = "\$t = unserialize('".serialize($t['categories'])."');";
		$x->overrideColumn('<? '.$j.' echo $t[$category];?>','category');
		$x->overrideColumn('<? if($timedate_update > 0) {echo date("m/d/Y h:i A",$timedate_update);}?>','timedate_update');
		$x->overrideColumn('<a href="<?=appurl("helpdesk/helpdeskView/$helpdesk_id");?>"><?=((strlen(trim($summary)) > 1) ? $summary : \'[ no summary given ]\');?></a>','summary');
		//link username to history
		$x->overrideColumn('<a href="<?=appurl("helpdesk/history/username=$userid");?>"><?=$userid;?></a>','userid');
		$x->overrideColumn('<? if ($timedate_close>0) { echo date("m/d/Y h:i A",$timedate_close); } ?>','timedate_close');
		$x->ignore = array('timedate_close');
		$x->headers = array(
			"summary"=>"Summary",
			"timedate_update"=>"Last Update",
			"timedate_close"=>"Closed",
			"status"=>"Status",
			"category"=>"Category",
			"assigned_to"=>"Technician",
			'helpdesk_id'=>'Incident #',
			'userid'=>'Owner'
			);

		//must override default sort order with a join table to
		// allow for defining arbitrary sort orders regardless
		// of the auto-increment id of the status label
		$x->joins = 'LEFT JOIN helpdesk_status AS B ON helpdesk_incident.status = B.helpdesk_status_id';
//		$x->sort_order = 'DESC';

		//let the column sort override the default behavior above
		if ( strlen($arg->getvars['dgorder']) > 0 ) {
			$x->orderby = $arg->getvars['dgorder'];
			if ( strlen($arg->getvars['dgsorder']) > 0 ) {
				$x->sort_order = $arg->getvars['dgsorder'];
			} else {
				$x->sort_order = 'ASC';
			}
		}

		//since we're always appendy an orderby, if there was a previous one
		// give it the sort order that it wanted, because we are going to
		// overwrite it.
		if ( strlen($x->orderby) > 0 ) {
			$x->orderby .= ' '.$x->sort_order.', ';
		}
		$x->orderby .= ' B.helpdesk_status_sort, timedate_update';
		$x->sort_order = 'DESC';

		$x->addTechnicianSelectFilter('Technician', 'assigned_to');
		$x->addOwnerSelectFilter('Owner', 'userid'); // Added for ticket 493
		$x->addHelpdeskStatusFilter('Status', 'status');
		$x->addHelpdeskTicketCategoryFilter('Category', 'category');
		$x->addInputFilter("Incident #","helpdesk_id");
		$x->addInputFilter("Summary","summary"); // Added for ticket 493

		//This is searching by user id, which is generally the student
		// name.  Searching by student name in the profile table would
		// mean doing a big join across the profile, user table and
		// user_id join.

		$x->addInputFilter("Username","userid");

		$t['table'] = $x->toHTML();
	}

	function admin2Run(&$db,&$u,&$arg,&$t) { 
		
		$this->applinks['Modify status and category codes'] = 'main/event=admin2';
		$this->applinks['User Accounts'] = '%administration/users';


		$this->inactivelinks[] = 'Modify status and category codes';
		
		$db->query("select * from helpdesk_status");
		while($db->next_record()) {
			$t['status'][$db->Record[0]] = $db->Record['helpdesk_status_label'];
		}	
		
		// get a list of categories
		$db->query("select * from helpdesk_categories");
		while($db->next_record()) {
			$t['categories'][$db->Record[0]] = $db->Record['helpdesk_category_label'];
		}
		
		$arg->templateName = "main_hdadmin2";
		$arg->templateStyle = "private";
		
	}

}
?>
