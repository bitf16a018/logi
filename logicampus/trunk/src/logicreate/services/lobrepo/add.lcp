<?

include_once(LIB_PATH.'PBDO/LobContent.php');
include_once(LIB_PATH.'PBDO/LobMetadata.php');
include_once(LIB_PATH.'PBDO/LobUserLink.php');

include_once(LIB_PATH.'SiteForms.php');

include_once(LIB_PATH.'lc_table.php');
include_once(LIB_PATH.'lc_table_renderer.php');

include_once(LIB_PATH.'lc_lob.php');
include_once(LIB_PATH.'lc_lob_renderer.php');

/**
 * Learning Object Repository
 */
class add extends FacultyService {

	var $presentor='htmlPresentation';
	var $sectionTitle = 'Classroom Manager';
	var $applinks = array (
		'All Learning Objects'=>'',
		'Import Learning Objects'=>'import',
		'My Learning Objects'=>'myobj',
		'Add Learning Objects'=>'add',
		);


	/**
	 *
	 */
	function run(&$db,&$u,&$lc,&$t) {
		$lc->templateName = 'add_main';
		$ext = addslashes($lc->getvars['m']);
		$mimetype = Lc_Lob::getMimeForSubtype($lc->getvars['t'],$ext);
		//$lc->getvars['ext'] = 'jpeg';
		switch($lc->getvars['t']) {
			case 'html':
				$lc->templateName = 'add_html';
				$formObj = new SiteForm();
				$formObj->getForm('classcontentlesson');
				$formObj->data[2][0]['cols'] = 80;
				//debug($formObj->data);
				//update the event.  why do this in code?
				// so we don't have to update the DB with update statements
				$formObj->data[6][0]['defaultValue'] = 'save';

				$metafields = LC_Lob_Renderer::getMetadataForm();
//				debug($metafields,1);
				//move the button and hidden fields to the end of the form
				// to make room for the new fields
				$formObj->data[9] = $formObj->data[6];
				$formObj->data[8] = $formObj->data[5];
				$formObj->data[7] = $formObj->data[4];

				$formObj->data[4] = $metafields[0];
				$formObj->data[5] = $metafields[1];
				$formObj->data[6] = $metafields[2];

				//add hidden mimetype at the end

//				function addHidden($name, $defaultValue='', $groups=array('public'), $row='')
				$formObj->addHidden('mime',$mimetype);

				$formObj->action = modurl('add'); // i should do this in the manager/form itself
				$t['form'] = $formObj->ToHTML();
				break;

			case 'image':
				$lc->templateName = 'add_image';
				break;

			case 'doc':
				$lc->templateName = 'add_doc';
				break;

		}

		$t['mimetype'] = $mimetype;
	}


	function uploadToLob(&$lob,&$lc,$upName) {
		$lob->set('lobContent', $lc->postvars['txText']);
		$lob->set('lobTitle', $lc->postvars['txTitle']);

		$lob->set('lobFilename', urlencode( $lc->uploads[$upName]['name'] ) );
		$lob->set('lobBinary', file_get_contents( $lc->uploads[$upName]['tmp_name'] ) );
		$lob->set('lobContent', $lc->postvars['txText']);
		$lob->set('lobSubType',$lc->postvars['lob_sub_type']);
		$n =& $lc->uploads[$upName]['name'];

		$ext = substr (
			$n, 
		       (strrpos($n, '.')  - strlen($n) +1)
			);

		$ext = strtolower($ext);
		$m = Lc_Lob::getMimeForSubtype($lc->postvars['lob_sub_type'],$ext);
		$lob->set('lobMime', $m);

		//create the link text in a standard way
		$lob->set('lobUrltitle',
			LC_Lob::createLinkText($lob->get('lobTitle'),$ext)
		);


	}


	function textToLob(&$lob,&$lc) {
		$lob->set('lobContent', $lc->postvars['txText']);
		$lob->set('lobSubType','text');
		$lob->set('lobTitle', $lc->postvars['txTitle']);
		$lob->set('lobMime', $lc->postvars['mime']);

		//create the link text in a standard way
		$lob->set('lobUrltitle',
			LC_Lob::createLinkText($lob->get('lobTitle'))
		);

	}


	/**
	 * Save a content obj to the db
	 */
	function saveRun(&$db,&$u,&$lc,&$t) {
		$guid = lcUuid();

		$lob = new LobContent();
		$lobMetaObj = new LobMetadata();
		$lobUserObj = new LobUserLink();

//debug($lc,1);

		$lob->set('lobType','content');
		$lob->set('lobGuid',$guid);


		if (@$lc->uploads['content']) {
			$this->uploadToLob($lob,$lc,'content');
		} else if (@$lc->uploads['document']) {
			$this->uploadToLob($lob,$lc,'document');
		} else {
			$this->textToLob($lob,$lc);
		}
//		debug($lob,1);
//		debug($lc->postvars['txTitle'],1);
		$lob->save();

		$lobMetaObj->set('lobId',$lob->getPrimaryKey());
		$lobMetaObj->set('lobKind','content');
		$lobMetaObj->set('author', $lc->postvars['md_author']);
		$lobMetaObj->set('copyright', $lc->postvars['md_copyright']);
		$lobMetaObj->set('license', $lc->postvars['md_license']);
		$lobMetaObj->save();

		$lobUserObj->set('lobId',$lob->getPrimaryKey());
		$lobUserObj->set('userId',$u->userId);
		$lobUserObj->save();

		$u->addSessionMessage('Successfully added content.');

		$this->presentor = 'redirectPresentation';
		$t['url'] = appurl('lobrepo/myobj');
	}
}

?>
