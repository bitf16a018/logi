<?PHP

include_once(LIB_PATH.'inputValidation.php');
include_once(LIB_PATH.'courseObj.php');
include_once(LIB_PATH.'semesterObj.php');

class teacherclass extends FacultyService {

var $presentor = "htmlPresentation";
var $authorizer = 'regAuth';

function Run($db,&$u,&$lc,&$t){
	$lc->templateName = 'teacherclass_add';
}

function makeSemester($db,&$u,&$lc,&$t) {

	$semesterObj = new semesterObj();		
	$startdate = $lc->postvars['startyear'].
	'-'.$lc->postvars['startmonth'].
	'-'. $lc->postvars['startday'];

	$enddate = $lc->postvars['endyear'].
	'-'.$lc->postvars['endmonth'].
	'-'. $lc->postvars['endday'];

	$starttime = $startdate.' 1:00:00';

	$endtime = $enddate.' 1:00:00';

	$semesterObj->dateStart = $startdate;
	$semesterObj->dateEnd = $enddate;

	//$semesterObj->dateRegistrationStart =  
	$semesterObj->dateRegistrationEnd = $enddate;

	//$semesterObj->dateAccountActivation = $starttime;
	$semesterObj->dateDeactivation  = $enddate;

	//$semesterObj->dateCensus =

	$semesterObj->dateFinalDrop = $endtime;

	$semesterObj->dateStudentActivation = $starttime;
	$semesterObj->dateStudentDeactivation = $endtime;

	$semesterObj->semesterId = "ALL";
	$semesterObj->semesterYear = $lc->postvars['startyear'];
	$semesterObj->semesterTerm = $lc->postvars['classname'];

	// make sure to use BIG H for hours
	//$semesterObj->dateEndITVseminar = date('Y-m-d H:i:s', dateArray2TimestampFull($lc->postvars['dateEndITVseminar']));
	//$semesterObj->dateStartITVseminar = date('Y-m-d H:i:s', dateArray2TimestampFull($lc->postvars['dateStartITVseminar']));

	$semesterObj->dateEndOrientation= $endtime;
	//$semesterObj->dateStartOrientation =

	//$semesterObj->dateEndTextbook = date('Y-m-d H:i:s', dateArray2TimestampFull($lc->postvars['dateEndTextbook']));
	//$semesterObj->dateStartTextbook = date('Y-m-d H:i:s', dateArray2TimestampFull($lc->postvars['dateStartTextbook']));

	$semesterObj->dateEndExam= $endtime;
	//$semesterObj->dateStartExam = date('Y-m-d H:i:s', dateArray2TimestampFull($lc->postvars['dateStartExam']));
	
	$semesterObj->_saveToDB();
	$id =  mysql_insert_id();
	if($id == null)
		$id = 1;
	if ($id >= 1) {
		$sql = 'insert into semesters_course_info set id_semesters='.$id;
		$db->query($sql);
		return $id;
		/// i need to know if this worked..add error checking later
	}
}

function makeCourse($db, &$u, &$lc, &$t){
	
	$courses = new courseObj();
	$courses->courseFamily = $lc->postvars['courseFamily'];
	//$courses->courseFamily = strtoupper($courses->courseFamily);
	$courses->courseNumber = $lc->postvars['coursenumber'];
	$courses->courseName = $lc->postvars['coursename'];
	$courses->courseDescription = $lc->postvars['discription'];
	
	$courses->_saveToDB();
	return mysql_insert_id();
}

function makeClass($db, &$u, &$lc, &$t){

	$a_sec_numbers = explode("\n", $lc->postvars['sectionnumbers']);
	
	$classObj = new classObj();
	$classObj->id_courses = $lc->postvars['id_course'];
	$classObj->id_semesters = $lc->postvars['id_semester'];
	$classObj->sectionNumbers = $lc->postvars['sectionnumbers'];
	$classObj->classType  = $lc->postvars['classtype'];
//	$classObj->stylesheet
//	$classObj->id_class_resource
	$classObj->facultyId = $u->username;

	$classObj->courseFamily = $lc->postvars['courseFamily'];
	$classObj->courseNumber = $lc->postvars['coursenumber'];
	$classObj->courseFamilyNumber = $lc->postvars['courseFamily'].$lc->postvars['coursenumber'];
	$classObj->courseName = $lc->postvars['coursename'];

	$classObj->_saveToDB();

	if ($new_id_class = mysql_insert_id()) {
		// add section numbers
		foreach ($a_sec_numbers as $pointer=>$snum) {
			if ((int)$snum <= 0) {
				continue;
			}
			$sql = '
			INSERT INTO class_sections
			SET sectionNumber='.(int)$snum. ',
			id_classes='.$new_id_class;

			$db->query($sql);

		}
		// add classdoc folders (Assignments, Web Content, Classroom, Images'
		include_once(LIB_PATH. 'documentLibraryLib.php');

		$folderObj = new LC_folder();
		$folderObj->name = 'Trash';

		$folderObj->folderType= 0;
		$folderObj->parentKey = 0;
		$folderObj->owner = $this->cleanedArray['facultyId'];
		$folderObj->class_id = $new_id_class;
		$folderObj->notes = 'Place files viewable by your classroom in here.';
		$folderObj->_save('classdoclib_Folders');

		unset($folderObj);

		$folderObj = new LC_folder();
		$folderObj->name = 'Classroom';
		$folderObj->folderType= 1;
		$folderObj->parentKey = 0;
		$folderObj->owner = $this->cleanedArray['facultyId'];
		$folderObj->class_id = $new_id_class;
		$folderObj->notes = 'Place files viewable by your classroom in here.';
		$folderObj->_save('classdoclib_Folders');

		unset($folderObj);

		$folderObj = new LC_folder();
		$folderObj->name = 'Web Images';
		$folderObj->folderType= 1;
		$folderObj->parentKey = 0;
		$folderObj->owner = $this->cleanedArray['facultyId'];
		$folderObj->notes = 'Place images for your lesson web pages here.';
		$folderObj->class_id = $new_id_class;
		$folderObj->_save('classdoclib_Folders');

		unset($folderObj);

		$folderObj = new LC_folder();
		$folderObj->name = 'Assignments';
		$folderObj->folderType= 1;
		$folderObj->parentKey = 0;
		$folderObj->owner = $this->cleanedArray['facultyId'];
		$folderObj->class_id = $new_id_class;
		$folderObj->notes = 'Use this folder to hold
				assignments for students that were not uploaded
				via the assignment manager.';
		$folderObj->_save('classdoclib_Folders');

		// Insert an entry for the Gradeboko Application
		include_once(LIB_PATH.'ClassGradebook.php');
		$gradebookObj = new ClassGradebookBase();

		$gradebookObj->set('idClasses', $new_id_class);
		$gradebookObj->aLower = 0;
		$gradebookObj->bLower = 0;
		$gradebookObj->cLower = 0;
		$gradebookObj->dLower = 0;
		$gradebookObj->totalPoints = 0;
		$gradebookObj->roundScoresUp = 0;
		$gradebookObj->calculationType = 0;
		$gradebookObj->colorMissingGrade = '';
		$gradebookObj->save();

		if ($gradebookObj->idClassGradebook == false) {
			echo '*** ALERT:: Gradebook::Entry failed to insert, please alert a programmer in regards to *id_classes='.$new_id_class.'"*';
		}

			// Insert an entry for the Exam Scheduler Application
			include_once(LIB_PATH.'ExamScheduleClasses.php');
			$esc = new ExamScheduleClasses();
			$esc->idClasses = $new_id_class;
			$esc->idSemester = $lc->postvars['id_semester'];
			$esc->status = 0;
			$esc->southCampus = 0;
			$esc->southeastCampus = 0;
			$esc->northeastCampus = 0;
			$esc->northwestCampus = 0;
			$esc->receivedDate = '';
			$esc->note = '';
			$esc->save();
		
		$u->sessionvars['administration']['classes']['currentsemester'] = $lc->postvars['id_semester'];

		$t['goodtimes'] = '<li>Thank you, your class has been added successfully.</li>';
	}
}

function addRun($db,&$u,&$lc,&$t){
        $t['myEvizent'] = 'add';
	$lc->templateName = 'teacherclass_add';

	$this->sectionTitle = 'Add a Class';
	$this->inactivelinks = array( 'Add a Class' );

	$cf = 0;
	// course family but really it's course ID and i will retrieve the course family from it and the
	// teachers that have added it as a preference
	if ((int)$lc->getvars['cf'] > 0) {
		$cf = (int)$lc->getvars['cf'];
	}
	
	$lc->postvars['semesterYear']['month'] = 1;
	$lc->postvars['semesterYear']['day'] = 1;
	$lc->postvars['courseFamily'] = "ALL";
	$lc->postvars['classtype'] = "Test";

	$hasErrors = false;
	
	$bl_date_start = strtotime($lc->postvars['startmonth']. '/'. $lc->postvars['startday']. '/'.$lc->postvars['startyear']);
	$bl_date_end   = strtotime($lc->postvars['endmonth']. '/'. $lc->postvars['endday']. '/'.$lc->postvars['endyear']);
	//Check Start and end date
	
	if ($bl_date_start >= $bl_date_end){       
		$t['error'][] = '* Semester date must come before the semester date end';
        }	
	if(!validateLength($lc->postvars['coursename'],1))
		$t['error'][] = '* Please enter a class name';
	
	if ($lc->postvars['submit']) {
		if (count($t['error']) > 0){
			$t['error'][] = 'Please fix the problems above then resubmit the form';
		}else{
			$lc->postvars['id_semester'] = $this->makeSemester($db, $u, $lc, $t);


			$lc->postvars['id_course'] = $this->makeCourse($db, $u, $lc, $t);
			$this->makeClass($db, $u, $lc, $t);
		}
	}

	if ($cf > 0) {
		// MAJOR HACK DO NOT TOUCH! IT's so i can repopulate a database populated select element
		// goes off of SiteForm.php so if you are going to change something here.. change it in siteforms.
		$f->modFormValue('facultyId', 'CHANGEFAMILY'.$cf);
		$f->modFormValue('id_courses', $cf);
	}

}

}

?>
