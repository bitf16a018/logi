<?php
/*************************************************** 
 *
 * This file is under the LogiCreate Public License
 *
 * A copy of the license is in your LC distribution
 * called license.txt.  If you are missing this
 * file you can obtain the latest version from
 * http://logicreate.com/license.html
 *
 * LogiCreate is copyright by Tap Internet, Inc.
 * http://www.tapinternet.com/
 ***************************************************/


include_once(LIB_PATH.'LC_html.php');
include_once(LIB_PATH.'SiteForms.php');
include_once(LIB_PATH.'datagrid.php');
include_once(LIB_PATH.'semesterObj.php');
include_once(LIB_PATH.'lc_class.php');
include_once(LIB_PATH.'lc_enrollment.php');

class enrollment extends RegAuth {

	var $presentor = "htmlPresentation";
	var $PAGE_SIZE = 30;
	var $cleanedArray = array();

	

	/**
	 * Show list of classes (sections) a student is in
	 * and give option to add to new classes
	 *
	 */

	function run (&$db,&$u,&$lc,&$t) {

		# Update active semester and store in user session
		if ($lc->postvars['semester'])
		{
			$u->sessionvars['enrollmentSemesterId'] = $lc->postvars['semester'];
		} elseif ($u->sessionvars['enrollmentSemesterId'] == '')
			{
				$u->sessionvars['enrollmentSemesterId']  = semesterObj::getCurrentID();
			}
		

		$name = $u->username;
		if ($name=='') 
		{ 
			$name = $u->username;
		}

		if ($name == '')
		{
			$lc->templateName = 'enrollment_error';
			$t['error'] = '<h3>Fatal error:  No student selected.</h3>';
			return;
		}

		$this->sectionTitle .= ' for <u><a style="font-size: 100%;">'.$name.'</a></u>';
		$t['username'] = $name;


		//only show semesters if simple mode is off
		if (LcSettings::isModuleOff('LOGICAMPUS_SIMPLE_MODE')) {

			$f = new SiteForm();
			$f->getForm('semester', array('semester'=>$u->sessionvars['administratio
		n']['classes']));
			$f->action = modurl("enrollment/main/username=$name");
			$t['form'] = $f->ToHTML();

			# Take active semesterId out of sessionvar
			$semesterId = $u->sessionvars['enrollmentSemesterId'];
			// get classes taken
			$classes = classObj::getAllClassesTaken($name, $semesterId);
		} else {
			// get classes taken
			$classes = classObj::getAllClassesTaken($name);
		}

		$d = new datagrid('administration','enrollment');
		$d->sortColumns = array("courseNumber",'facultyId');
		$d->headers = array(
			"del"=>" ", 
			"sectionNumber"=>"Section",
			"facultyName"=>"Faculty", 
			"courseName"=>"Course name",
			"courseFamilyNumber"=>"Course",
			"courseFamily"=>"Family",
			"classType"=>"Type",
			"id_classes"=>"Class ID",
			"id_semesters"=>"Semester ID",
			"facultyId"=>'Facutly ID',
			"id_student"=>"Student ID",
			'semesterID'=>'Semester',
			'courseNumber'=>'Course Number'
			);
		$d->prependColumn('<?$name="'.$name.'";?><a href="<?=modurl("enrollment/event=remove/semester=$semesterID/username=".$name."/id=".$id_classes);?>">Drop</a>',"del");
		$d->display = array("courseName","sectionNumber", "classType","courseFamilyNumber","facultyName");
		$d->setRows($classes);
		$d->ignore = array (
				'id_class_resource', 
				'stylesheet', 
				'_dsn',
				'_pkey', 
				'sectionNumbers', 
				'id_courses',
				'active',
				'dateWithdrawn',
				'noexam',
				'facultyId',
				'__loaded',
				'semester_id'
		);
		$t['classes'] = $d->toHTML();
		$lc->templateName = 'enrollment_main';
		

		$classArray = LcClass::getAvailableClasses();
		foreach ($classArray as $idx => $classObj) {
			$x = explode("\n",$classObj->sectionNumbers);
			foreach($x as $k=>$v) { 
				$optId = sprintf('%d_%d',$classObj->id_classes,$v);
				$c[$optId] = $classObj->courseFamily." ".
				$classObj->courseNumber." - ".$classObj->courseName." - ".
				" ($v) - ".$classObj->facultyId;
			}
		}
		$t['courses'] = makeOptions($c);
	}


	function addRun(&$db,&$u,&$lc,&$t) {
		$semesterId = $u->sessionvars['enrollmentSemesterId'];

		$name = addslashes(stripslashes($lc->postvars['username']));
		$classSectionNumber = (int)$lc->postvars['id'];
		list($classId,$sectionNumber) = explode('_',$classSectionNumber);

		$classEnrollment = new lcClassEnrollment($classId,$semesterId);
		$classEnrollment->addStudent($u->userId);

		$classEnrollment->save();

		updateSessionVars($db,$u);

		$lc->templateName = 'enrollment_main';
		$this->run($db,$u,$lc,$t);
	}

	function activateRun (&$db,&$u,&$lc,&$t) {
		$name = addslashes(stripslashes($lc->getvars['username']));
		$sectionNumber = (int)$lc->getvars['id'];
		$active= (int)$lc->getvars['active'];

		$db->query("update class_student_sections set active=$active where id_student='$name' and sectionNumber=$sectionNumber");
		$lc->templateName = 'enrollment_main';
		$this->run($db,$u,$lc,$t);
	}


	function removeRun (&$db,&$u,&$lc,&$t) {
		// only dealing with current semester right now
		// 

		$classId = (int)$lc->getvars['id'];
		$classEnrollment = new lcClassEnrollment($classId);

		$classEnrollment->removeStudent($u->userId);


//		$db->query("delete from class_student_sections where id_student='$name' and sectionNumber=$sectionNumber and semester_id=$semesterId");
		updateSessionVars($db,$u);

		$lc->templateName = 'enrollment_main';
		$this->run($db,$u,$lc,$t);

	}
}
?>
